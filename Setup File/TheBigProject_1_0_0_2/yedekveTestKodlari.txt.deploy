//textBox2.PasswordChar = '●';﻿
//List<string> kelimeler = new List<string>();
//Console.WriteLine(kelimeler.Any());
//kelimeler.Insert(0, "teneke");
//kelimeler.Insert(0, "kalem");
//kelimeler.Insert(1, "silgi");
//kelimeler.Insert(2, "defter");
//kelimeler.Insert(3, "dolmakalem");
//kelimeler.Insert(5, "dolmamiskalem");
//Console.WriteLine(kelimeler.BinarySearch("dolmakalem"));
//Console.WriteLine(kelimeler.Count);
//foreach (var item in kelimeler)
//{
//    rchVeri.Text = rchVeri.Text + "\n" + item + " ";
//}

//rchVeri.Text = rchVeri.Text + kelimeler.IndexOf("dolmamiskalem");
//rchVeri.Text = rchVeri.Text + kelimeler.Contains("dolankalem");
//rchVeri.Text = rchVeri.Text + kelimeler.Capacity;
//foreach (var item in kelimeler)
//{
//    rchVeri.Text = rchVeri.Text + "\n" + item + " ";
//}

//kelimeler.Insert(6, "puhahah");
//kelimeler.Insert(7, "zuhahaha");
//kelimeler.Insert(8, "ahaha");
//kelimeler.Add("teneke");
//rchVeri.Text = "\n" + rchVeri.Text + " " + kelimeler.IndexOf("teneke");
//rchVeri.Text = "\n" + rchVeri.Text + " " + kelimeler.Capacity;

//foreach (var item in kelimeler)
//{
//    rchVeri.Text = rchVeri.Text + "\n" + item + " ";
//}

//rchVeri.Text = "\n" + rchVeri.Text + " " + kelimeler[0] + " " + kelimeler[1] + " " + kelimeler[2] + " " + kelimeler[3] + " " + kelimeler[4] + " " + kelimeler[5] + " " + kelimeler[6];

//rchTest.AppendText(kelime.ToString());
//rchTest.AppendText(" = ");
//rchTest.AppendText(kelimeBaslangicIndeksi.ToString());
//rchTest.AppendText("-");
//rchTest.AppendText(kelime.Length.ToString());
//rchTest.AppendText("# ");
//System.Threading.Thread.Sleep(100);

            // eski kelime sayısı hesaplama algoritmam bu sadece boşluğa dayalıydı o yüzden kaldırıldı
			//int kelime = 0; 
            //if (metin == string.Empty)
            //{
            //    return 0;
            //}
            //else
            //{
            //    if (metin.Length == 1 && metin[0] == ' ')
            //    {
            //        return 0;
            //    }
            //    for (int i = 0; i < metin.Length; i++)
            //    {
            //        if (metin[i] == ' ' && i != 0)
            //        {
            //            if (metin[i - 1] != ' ')
            //                kelime++;
            //        }
            //    }
            //    return kelime + 1;
            //}





		// test butonu ve richtextboxları
		private void btnTest_Click(object sender, EventArgs e)
		{
            Random rastgele = new Random();
            int r = rastgele.Next(0, 255);
            int g = rastgele.Next(0, 255);
            int b = rastgele.Next(0, 255);
            rchVeri.SelectionStart = 0;
            rchVeri.SelectionLength = txtTest.Text.Length;

            rchTest.SelectionBackColor = Color.FromArgb(200, r, g, b);
            rchTest.AppendText(txtTest.Text);
            rchTest.AppendText("==> Renk kodu: ");
            string kod = r + "," + g + "," + b + "\n";
            rchTest.AppendText(kod);
        }





		
            //Console.WriteLine("Kaldirilan Kelimeler Şunlar: ");
            //foreach (var kelime in kaldirilanKelimeler)
            //{
            //    Console.WriteLine(kelime);
            //}
            //Console.WriteLine("Kaldirilan Kelime Miktari: " + kaldirilanKelimeler.Count);



			eski highlight fonksiyonu
        private int kelimeHighlightla(string kelime)
        {
            int kacTaneBulundu = 0;

            Random rastgele = new Random();
            int kod = rastgele.Next(0, Renkler.RenkLimiti);

            if (kullanilanRenkler.Count == Renkler.RenkLimiti) // atanacak renk kalmadiğinda yani 20 den fazla eleman ararsak bu listi sifirlayarak ayni renkleri yine rastgele seciyor 
                kullanilanRenkler.Clear();

            while (kullanilanRenkler.Contains(kod)) // renk cakismasi olmamasi icin eger kullanilan renk gelirse baska renk gelene kadar döngü devam ediyor
            {
                kod = rastgele.Next(0, Renkler.RenkLimiti);
            } // random oldugu icin performans sıkıntısı olabilir ama 20 renk olduğu için bu bilgisayar için çok masrafli değil bence
            kullanilanRenkler.Add(kod);
            Renkler renk = new Renkler(kod);

            int baslangicIndeksi = 0;
            while (baslangicIndeksi < rchVeri.Text.Length)
            {
                StringBuilder str = new StringBuilder();
                for (int i = baslangicIndeksi; i < baslangicIndeksi + kelime.Length; i++)
                {
                    if (i >= rchVeri.Text.Length)
                        break;
                    str.Append(rchVeri.Text[i]);
                }
                if (str.ToString() == kelime)
                {
                    kacTaneBulundu++;
                    rchVeri.SelectionStart = baslangicIndeksi;
                    rchVeri.SelectionLength = kelime.Length;
                    rchVeri.SelectionBackColor = Color.FromArgb(0, renk.R, renk.G, renk.B);
                    rchVeri.Select(0, 0);
                }
                baslangicIndeksi++;
            }
            return kacTaneBulundu;
        }