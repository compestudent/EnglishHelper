<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="btnAra.ToolTip" xml:space="preserve">
    <value>Metin yükledikten sonra arama 
yapabilirsiniz. Her farklı kelime 
için ayrı bir renk atanır. Hangi 
kelimeden kaç tane olduğunu 
"Ayrıntılar" butonuyla görebilirsiniz.
Kelimelere farklı renkler atamak
istiyorsanız ARA butonuna tekrar
tekrar basabilirsiniz.</value>
  </data>
  <data name="btnDosyaEkle.ToolTip" xml:space="preserve">
    <value>.txt , .rtf gibi text formatlarını destekliyor.
Ayrıca .cs , .java , .cpp gibi programlama
dili formatlarını da destekliyor. Ama genel
amacı .txt ve .rtf gibi formatları yüklemek
içindir. Deneyerek başka hangi formatları
desteklediğine bakabilirsiniz.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAeBJREFUOE+d
        lEsoRGEUx28shFgpFNkpeRcLC7GwUSzsLVBkY4uVeWNMzWLYSEp2xsbCJEnZWAiFEknkkeSxQCzk9Tu3
        Q+7MuIx//brfd87/O/M9x4iW2+2udDqdfliGDViBUeJ1avmbgsFgKgPH4RVOYAqGNbYH7zAHWTrkZ2FK
        gzW4hw5I0tSXXC5XM/ELOIIcDccXhgm4gwoNxRX5PJDZL2soVuxNMQZZZpuGbIW/Fq8sv0lDVpEYhItw
        OJwcCoVSNGwr/Kswo12rSMgpTmu72wz+InwDcKZdq0jswoi21yHNTNiIA+rE96xdq0jI9Ce1vYm5x0zY
        CF8/XGrXKhJjcKhtFzxAlZn8QeQXYUG7VnFqNSTf9Z5lwg48QW8gEEhX25eIl4DcilYNxYqkvIBzr9eb
        7/f7M2jLCzmFYxghXqA++cF92JZbYQ6OJwxZIC/gHOo1bBHxMlZxwPcN5J03+Hy+XE3HimQ2piWQSytX
        Sa5GF0X6+EbgBbZgHsQj23TFlpVqifjC1IJ5Fs5AZnMJEeLtsky+jfTNgsoVlOnwxCXLdDgct1FFr8H2
        f8BWMhhutNgnNx6Pp0gtiYu9K6eIzOx7UfPF/VtyIBSRPZRij3KnNfV/UagQhihWbRiG8QEZrFH/X3+B
        oQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnTurkce.ToolTip" xml:space="preserve">
    <value>"Ğ" , "Ü" , "Ş" , "İ" , "Ö" , "Ç" gibi  Türkçe 
karakterleri metinden kaldırmak için
kullanabilirsiniz. Metin analiz edilirken
uygun dile göre zaten bu işlem yapılıyor
ama isterseniz başka amaçlar için buradan
da yapabilirsiniz.
</value>
  </data>
  <data name="btnSonraki.ToolTip" xml:space="preserve">
    <value>Arama yaptıktan sonra kelimelerin
hepsine ayrı renkler atanır. Hangi 
kelimenin metnin neresinde olduğuna
bakmak için sizin yazma sıranıza göre
teker teker basarak tüm kelimeleri 
dolaşabilirsiniz. </value>
  </data>
  <data name="cmbIstisna.ToolTip" xml:space="preserve">
    <value>Analiz Yaparken İstisna Edilmesini 
İstediğiniz  Kelimeler İçin Ayarlar
OPTİMAL: En Gerekli/İdeal Kelimeler
AYRINTILI: Çok Daha Fazla İstisna
Kelime İçerir. Anlamsız kelime 
grupları içeren bir metniniz varsa
seçmeniz tavsiye edilir.
SİZ EKLEYİN: Sadece Aşağıya 
Yazdığınız Kelimeler İstisna Edilir
KELİME ÇIKARMAYIN: İstisnasız normal 
analiz yapılır.</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
</root>